<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>Hello World</title>
      <link href="/2018/03/19/hello-world/"/>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
    </entry>
    
  
  
    
    <entry>
      <title></title>
      <link href="/js/search.js"/>
      <content type="html"><![CDATA[var searchFunc = function(path, search_id, content_id) {    'use strict';    $.ajax({        url: path,        dataType: "xml",        success: function( xmlResponse ) {            // get the contents from search data            var datas = $( "entry", xmlResponse ).map(function() {                return {                    title: $( "title", this ).text(),                    content: $("content",this).text(),                    url: $( "url" , this).text()                };            }).get();            var $input = document.getElementById(search_id);            var $resultContent = document.getElementById(content_id);            $input.addEventListener('input', function(){                var str='<ul class="\"search-result-list\"">';                                var keywords = this.value.trim().toLowerCase().split(/[\s\-]+/);                $resultContent.innerHTML = "";                if (this.value.trim().length <= 0)="" {="" return;="" }="" perform="" local="" searching="" datas.foreach(function(data)="" var="" ismatch="true;" content_index="[];" data_title="data.title.trim().toLowerCase();" data_content="data.content.trim().replace(/<[^">]+>/g,"").toLowerCase();                    var data_url = data.url;                    var index_title = -1;                    var index_content = -1;                    var first_occur = -1;                    // only match artiles with not empty titles and contents                    if(data_title != '' && data_content != '') {                        keywords.forEach(function(keyword, i) {                            index_title = data_title.indexOf(keyword);                            index_content = data_content.indexOf(keyword);                            if( index_title < 0 && index_content < 0 ){                                isMatch = false;                            } else {                                if (index_content < 0) {                                    index_content = 0;                                }                                if (i == 0) {                                    first_occur = index_content;                                }                            }                        });                    }                    // show search results                    if (isMatch) {                        str += "<li><a href=""+ data_url +"" class="search-result-title">"+ data_title +"</a>";                        var content = data.content.trim().replace(/<[^>]+>/g,"");                        if (first_occur >= 0) {                            // cut out 100 characters                            var start = first_occur - 20;                            var end = first_occur + 80;                            if(start < 0){                                start = 0;                            }                            if(start == 0){                                end = 100;                            }                            if(end > content.length){                                end = content.length;                            }                            var match_content = content.substr(start, end);                             // highlight all keywords                            keywords.forEach(function(keyword){                                var regS = new RegExp(keyword, "gi");                                match_content = match_content.replace(regS, "<em class="\"search-keyword\"">"+keyword+"</em>");                            });                            str += "<p class="\"search-result\"">" + match_content +"...</p>"                        }                        str += "</[^></li>";                    }                });                str += "</=></ul>";                $resultContent.innerHTML = str;            });        }    });}]]></content>
    </entry>
    
    <entry>
      <title>Page not found</title>
      <link href="/404.html"/>
      <content type="html"><![CDATA[<p>Sorry.<br>Page not found.</p>]]></content>
    </entry>
    
  
</search>
